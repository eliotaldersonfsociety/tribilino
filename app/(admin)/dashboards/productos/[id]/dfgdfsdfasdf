"use client";

import { useEffect, useState } from "react";
import { useParams } from "next/navigation";  // ‚ö†Ô∏è Usa esto para obtener `id`
import Link from "next/link";
import Image from "next/image";
import { ArrowLeft, Pencil } from "lucide-react";
import DeleteButton from "@/components/delete/DeleteButton";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Separator } from "@/components/ui/separator";

const customLoader = ({ src, width, quality }: { src: string; width: number; quality?: number }) => {
  return `${src}?w=${width}&q=${quality || 75}`;
};

interface Product {
  id: string;
  title: string;
  price: number;
  compareAtPrice?: number;
  status?: "active" | "draft";
  description?: string;
  vendor?: string;
  category?: string;
  productType?: string;
  tags?: string[];
  images?: string[];
  sku?: string;
  barcode?: string;
  quantity?: number;
  trackInventory?: boolean;
}

export default function ProductDetailPage() {
  const params = useParams();  // üî• Obtiene `id` din√°mico
  console.log("Params:", params); // üîç Verifica si `params` contiene el `id`
  const productId = params?.id as string;  
console.log("Product ID üîç:", productId); // üîç Verifica si `productId` es correcto
  const [product, setProduct] = useState<Product | null>(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    console.log("Product ID:", productId); // üîç Ahora esto s√≠ se ver√°

    if (!productId) {
      console.error("‚ùå No se encontr√≥ el ID del producto.");
      setLoading(false);
      return;
    }

    const fetchProduct = async () => {
      try {
        const res = await fetch(`http://localhost:3000/api/products?id=${productId}`, {
          cache: "no-store",
        });

        if (!res.ok) {
          throw new Error("Failed to fetch product");
        }

        const data = await res.json();
        setProduct(data);
      } catch (error) {
        console.error("Error fetching product:", error);
      } finally {
        setLoading(false);
      }
    };

    fetchProduct();
  }, [productId]);

  if (loading) return <p>Cargando...</p>;
  if (!product) return <p>Producto no encontrado</p>;

  return (
    <div className="container mx-auto py-8">
      <div className="flex items-center gap-4 mb-6">
        <Button
          id={params.id as string} // Aseg√∫rate de que `id` sea un string
        />
        <Link href="/pagina">
          <Button variant="outline" size="icon">
            <ArrowLeft className="h-4 w-4" />
          </Button>
        </Link>
        <h1 className="text-3xl font-bold">{product.title}</h1>
        <div className="ml-auto flex gap-2">
          <Link href={`/list/${productId}/edit`}>
            <Button>
              <Pencil className="h-4 w-4 mr-2" />
              Editar Producto
            </Button>
          </Link>
          <DeleteButton 
            id={params.id as string} // Aseg√∫rate de que `id` sea un string
          />
        </div>
      </div>
    </div>
  );
}
